// @generated by protobuf-ts 2.9.4 with parameter long_type_string
// @generated from protobuf file "weatherForecast.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { WeatherForecastGrpcService } from "./weatherForecast";
import type { WeatherForecastRequest } from "./weatherForecast";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { GrpcWeatherForecasts } from "./weatherForecast";
import type { Empty } from "./google/protobuf/empty";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service WeatherForecastGrpcService
 */
export interface IWeatherForecastGrpcServiceClient {
    /**
     * @generated from protobuf rpc: GetWeatherForecasts(google.protobuf.Empty) returns (GrpcWeatherForecasts);
     */
    getWeatherForecasts(input: Empty, options?: RpcOptions): UnaryCall<Empty, GrpcWeatherForecasts>;
    /**
     * @generated from protobuf rpc: GetWeatherForecastsByQty(WeatherForecastRequest) returns (GrpcWeatherForecasts);
     */
    getWeatherForecastsByQty(input: WeatherForecastRequest, options?: RpcOptions): UnaryCall<WeatherForecastRequest, GrpcWeatherForecasts>;
}
/**
 * @generated from protobuf service WeatherForecastGrpcService
 */
export class WeatherForecastGrpcServiceClient implements IWeatherForecastGrpcServiceClient, ServiceInfo {
    typeName = WeatherForecastGrpcService.typeName;
    methods = WeatherForecastGrpcService.methods;
    options = WeatherForecastGrpcService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: GetWeatherForecasts(google.protobuf.Empty) returns (GrpcWeatherForecasts);
     */
    getWeatherForecasts(input: Empty, options?: RpcOptions): UnaryCall<Empty, GrpcWeatherForecasts> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<Empty, GrpcWeatherForecasts>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetWeatherForecastsByQty(WeatherForecastRequest) returns (GrpcWeatherForecasts);
     */
    getWeatherForecastsByQty(input: WeatherForecastRequest, options?: RpcOptions): UnaryCall<WeatherForecastRequest, GrpcWeatherForecasts> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<WeatherForecastRequest, GrpcWeatherForecasts>("unary", this._transport, method, opt, input);
    }
}
