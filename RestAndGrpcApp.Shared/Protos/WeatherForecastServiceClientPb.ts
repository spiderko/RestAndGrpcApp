/**
 * @fileoverview gRPC-Web generated client stub for 
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.1
// source: RestAndGrpcApp.Shared/Protos/weatherForecast.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as RestAndGrpcApp_Shared_Protos_weatherForecast_pb from '../../RestAndGrpcApp.Shared/Protos/weatherForecast_pb'; // proto import: "RestAndGrpcApp.Shared/Protos/weatherForecast.proto"
import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb'; // proto import: "google/protobuf/empty.proto"


export class WeatherForecastGrpcServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetWeatherForecasts = new grpcWeb.MethodDescriptor(
    '/WeatherForecastGrpcService/GetWeatherForecasts',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    RestAndGrpcApp_Shared_Protos_weatherForecast_pb.GrpcWeatherForecasts,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    RestAndGrpcApp_Shared_Protos_weatherForecast_pb.GrpcWeatherForecasts.deserializeBinary
  );

  getWeatherForecasts(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null): Promise<RestAndGrpcApp_Shared_Protos_weatherForecast_pb.GrpcWeatherForecasts>;

  getWeatherForecasts(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: RestAndGrpcApp_Shared_Protos_weatherForecast_pb.GrpcWeatherForecasts) => void): grpcWeb.ClientReadableStream<RestAndGrpcApp_Shared_Protos_weatherForecast_pb.GrpcWeatherForecasts>;

  getWeatherForecasts(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: RestAndGrpcApp_Shared_Protos_weatherForecast_pb.GrpcWeatherForecasts) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/WeatherForecastGrpcService/GetWeatherForecasts',
        request,
        metadata || {},
        this.methodDescriptorGetWeatherForecasts,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/WeatherForecastGrpcService/GetWeatherForecasts',
    request,
    metadata || {},
    this.methodDescriptorGetWeatherForecasts);
  }

  methodDescriptorGetWeatherForecastsByQty = new grpcWeb.MethodDescriptor(
    '/WeatherForecastGrpcService/GetWeatherForecastsByQty',
    grpcWeb.MethodType.UNARY,
    RestAndGrpcApp_Shared_Protos_weatherForecast_pb.WeatherForecastRequest,
    RestAndGrpcApp_Shared_Protos_weatherForecast_pb.GrpcWeatherForecasts,
    (request: RestAndGrpcApp_Shared_Protos_weatherForecast_pb.WeatherForecastRequest) => {
      return request.serializeBinary();
    },
    RestAndGrpcApp_Shared_Protos_weatherForecast_pb.GrpcWeatherForecasts.deserializeBinary
  );

  getWeatherForecastsByQty(
    request: RestAndGrpcApp_Shared_Protos_weatherForecast_pb.WeatherForecastRequest,
    metadata?: grpcWeb.Metadata | null): Promise<RestAndGrpcApp_Shared_Protos_weatherForecast_pb.GrpcWeatherForecasts>;

  getWeatherForecastsByQty(
    request: RestAndGrpcApp_Shared_Protos_weatherForecast_pb.WeatherForecastRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: RestAndGrpcApp_Shared_Protos_weatherForecast_pb.GrpcWeatherForecasts) => void): grpcWeb.ClientReadableStream<RestAndGrpcApp_Shared_Protos_weatherForecast_pb.GrpcWeatherForecasts>;

  getWeatherForecastsByQty(
    request: RestAndGrpcApp_Shared_Protos_weatherForecast_pb.WeatherForecastRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: RestAndGrpcApp_Shared_Protos_weatherForecast_pb.GrpcWeatherForecasts) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/WeatherForecastGrpcService/GetWeatherForecastsByQty',
        request,
        metadata || {},
        this.methodDescriptorGetWeatherForecastsByQty,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/WeatherForecastGrpcService/GetWeatherForecastsByQty',
    request,
    metadata || {},
    this.methodDescriptorGetWeatherForecastsByQty);
  }

}

